name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # ou la branche que vous préférez

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check Out Code
        uses: actions/checkout@v2
        with:
          ref: main

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16  # Utilisez Node.js 16

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install Dependencies
        run: pip install -r requirements.txt

      - name: Install pytest
        run: pip install pytest

      - name: Get Version
        id: get-version
        run: |
          python -c "import noalchemy; print(noalchemy.__version__)" > version.txt
          echo "VERSION=$(cat version.txt)" >> $GITHUB_ENV

      - name: Run Tests
        id: test
        run: pytest

      - name: Check Test Status
        if: steps.test.outcome == 'success'
        run: echo "Tests have passed."
        
      - name: Manual Release Confirmation
        if: success()
        run: |
          echo "Release confirmation required. Click 'Approve' to create a new release."
          echo "release-confirmation=true" >> $GITHUB_ENV
        id: confirm-release
        continue-on-error: true

      - name: Create Release
        if: env.release-confirmation == 'true'
        run: |
          echo "Creating a new release..."
          
          # Obtenez la version depuis l'environnement
          version=${{ env.VERSION }}
          
          # Créez une nouvelle release GitHub
          curl -X POST "https://api.github.com/repos/USER/REPO/releases" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -d "{\"tag_name\": \"$version\", \"name\": \"$version\"}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
